# Pre-commit hooks for code quality and formatting
# See https://pre-commit.com for more information

repos:
  # General file fixes
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: end-of-file-fixer
        name: Fix End of Files
        description: Ensures files end with a newline
      - id: trailing-whitespace
        name: Trim Trailing Whitespace
        description: Trims trailing whitespace from files
      - id: mixed-line-ending
        name: Fix Mixed Line Endings
        args: ["--fix=lf"]
        description: Ensures consistent line endings (LF)
      - id: check-yaml
        name: Check YAML
        description: Validates YAML file syntax
        exclude: '^helm/.*\.yaml$'
      - id: check-json
        name: Check JSON
        description: Validates JSON file syntax
      - id: check-toml
        name: Check TOML
        description: Validates TOML file syntax
      - id: check-merge-conflict
        name: Check Merge Conflicts
        description: Prevents committing merge conflict markers
      - id: check-added-large-files
        name: Check Large Files
        args: ["--maxkb=1000"]
        description: Prevents large files from being committed
      - id: detect-private-key
        name: Detect Private Keys
        description: Prevents private keys from being committed

  # Python specific hooks
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.1.14
    hooks:
      - id: ruff
        name: Ruff Linter
        args: ["--fix"]
        description: Fast Python linter with autofix
      - id: ruff-format
        name: Ruff Formatter
        description: Fast Python formatter

  # Additional Python checks
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.8.0
    hooks:
      - id: mypy
        name: MyPy Type Checker
        args: ["--ignore-missing-imports", "--check-untyped-defs"]
        files: ^(backend|tests)/.*\.py$
        additional_dependencies: ["types-flask", "types-requests"]
        description: Static type checker for Python

  # Terraform hooks
  - repo: https://github.com/antonbabenko/pre-commit-terraform
    rev: v1.86.0
    hooks:
      - id: terraform_fmt
        name: Terraform Format
        description: Rewrites Terraform files to canonical format
      - id: terraform_validate
        name: Terraform Validate
        description: Validates Terraform files
      - id: terraform_tflint
        name: Terraform TFLint
        description: Linter for Terraform files
        args:
          - --args=--config=__GIT_WORKING_DIR__/.tflint.hcl
      - id: terraform_trivy
        name: Terraform Security Scan
        description: Static analysis of Terraform for security issues
        args:
          - --args=--minimum-severity=HIGH

  # JavaScript/TypeScript hooks
  # Note: ESLint is disabled in CI since frontend tests run separately
  # - repo: https://github.com/pre-commit/mirrors-eslint
  #   rev: v8.56.0
  #   hooks:
  #     - id: eslint
  #       name: ESLint
  #       files: \.(js|jsx|ts|tsx)$
  #       types: [file]
  #       additional_dependencies:
  #         - "@typescript-eslint/eslint-plugin"
  #         - "@typescript-eslint/parser"
  #         - "eslint-config-prettier"
  #         - "eslint-plugin-react"
  #         - "eslint-plugin-react-hooks"
  #       description: JavaScript/TypeScript linter

  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v3.1.0
    hooks:
      - id: prettier
        name: Prettier
        files: \.(js|jsx|ts|tsx|json|css|scss|md|yaml|yml)$
        exclude: '^(poetry\.lock|package-lock\.json|helm/.*\.yaml)$'
        description: Code formatter for multiple languages

  # Security hooks
  - repo: https://github.com/PyCQA/bandit
    rev: 1.7.5
    hooks:
      - id: bandit
        name: Bandit Security Linter
        files: ^(backend|tests)/.*\.py$
        args: ["-r", "-ll"]
        description: Security linter for Python code

  # Docker hooks
  - repo: https://github.com/hadolint/hadolint
    rev: v2.12.0
    hooks:
      - id: hadolint-docker
        name: Hadolint
        description: Dockerfile linter
        files: Dockerfile.*

  # Commit message hooks
  - repo: https://github.com/compilerla/conventional-pre-commit
    rev: v3.0.0
    hooks:
      - id: conventional-pre-commit
        name: Conventional Commits
        stages: [commit-msg]
        description: Ensures commit messages follow conventional format

# Configuration
default_language_version:
  python: python3.12

# Run hooks on all files by default
files: ""

# Exclude directories
exclude: |
  (?x)^(
    \.venv/|
    venv/|
    \.git/|
    \.mypy_cache/|
    \.pytest_cache/|
    \.ruff_cache/|
    __pycache__/|
    node_modules/|
    build/|
    dist/|
    \.terraform/|
    terraform/\.terraform/|
    work/|
    apps/work/|
    apps/[^/]+/venv/|
    apps/[^/]+/\.venv/|
    apps/[^/]+/work/|
    apps/[^/]+/node_modules/|
    apps/[^/]+/build/|
    apps/[^/]+/dist/|
    apps/[^/]+/\.mypy_cache/|
    apps/[^/]+/\.pytest_cache/|
    apps/[^/]+/\.ruff_cache/|
    apps/[^/]+/__pycache__/|
    \.coverage|
    htmlcov/|
    \.eggs/|
    \.egg-info/|
    .*\.egg
  )
