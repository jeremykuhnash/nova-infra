#!/bin/bash
# Initialize Terraform backend using the bootstrap configuration
# Works in ANY AWS account with AdministratorAccess

set -e

SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
BOOTSTRAP_DIR="${SCRIPT_DIR}/bootstrap"

echo "🚀 Nova Infrastructure - Terraform Backend Initialization"
echo "========================================================="
echo ""

# Check AWS credentials
echo "Checking AWS credentials..."
if ! aws sts get-caller-identity > /dev/null 2>&1; then
    echo "❌ Error: AWS credentials not configured or invalid"
    echo ""
    echo "Please configure AWS credentials using one of:"
    echo "  - aws configure"
    echo "  - export AWS_ACCESS_KEY_ID=xxx AWS_SECRET_ACCESS_KEY=yyy"
    echo "  - IAM instance role (if on EC2)"
    exit 1
fi

# Get account info
ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
USER_ARN=$(aws sts get-caller-identity --query Arn --output text)
REGION=${AWS_DEFAULT_REGION:-us-east-1}

echo "✅ Authenticated successfully!"
echo "   Account ID: $ACCOUNT_ID"
echo "   User/Role: $USER_ARN"
echo "   Region: $REGION"
echo ""

# Run bootstrap
echo "Step 1: Creating backend resources with Terraform bootstrap..."
echo "--------------------------------------------------------------"
cd "$BOOTSTRAP_DIR"

# Initialize bootstrap
if [ ! -d ".terraform" ]; then
    echo "Initializing bootstrap Terraform..."
    terraform init
fi

# Apply bootstrap
echo "Creating S3 bucket and DynamoDB table..."
terraform apply -auto-approve -var="aws_region=$REGION"

# Capture outputs
BUCKET_NAME=$(terraform output -raw bucket_name)
DYNAMODB_TABLE=$(terraform output -raw dynamodb_table_name)
BACKEND_CONFIG=$(terraform output -raw backend_config)

cd "$SCRIPT_DIR"

# Update backend.tf with actual values
echo ""
echo "Step 2: Updating backend configuration..."
echo "------------------------------------------"

cat > backend.tf <<EOF
# Terraform S3 backend configuration
# Auto-generated by init-backend.sh for account $ACCOUNT_ID
terraform {
  backend "s3" {
    bucket         = "${BUCKET_NAME}"
    key            = "terraform.tfstate"
    region         = "${REGION}"
    encrypt        = true
    dynamodb_table = "${DYNAMODB_TABLE}"
  }
}
EOF

echo "✅ Updated backend.tf with account-specific configuration"

# Initialize main Terraform
echo ""
echo "Step 3: Initializing main Terraform configuration..."
echo "-----------------------------------------------------"
terraform init -reconfigure

echo ""
echo "✅ SUCCESS! Terraform backend initialized for account $ACCOUNT_ID"
echo ""
echo "Backend resources created:"
echo "  • S3 Bucket: $BUCKET_NAME"
echo "  • DynamoDB Table: $DYNAMODB_TABLE"
echo "  • Region: $REGION"
echo ""
echo "Next steps:"
echo "  1. terraform plan  - Review infrastructure changes"
echo "  2. terraform apply - Deploy the infrastructure"
echo ""
echo "This configuration will work in ANY AWS account with AdministratorAccess!"
