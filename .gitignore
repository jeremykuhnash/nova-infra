# Local .terraform directories
.terraform/
.claude

# Python tool caches
.ruff_cache/
.mypy_cache/
.pytest_cache/

# .tfstate files
*.tfstate
*.tfstate.*

# Crash log files
crash.log
crash.*.log

# Exclude all .tfvars files, which are likely to contain sensitive data, such as
# password, private keys, and other secrets. These should not be part of version
# control as they are data points which are potentially sensitive and subject
# to change depending on the environment.
*.tfvars
*.tfvars.json

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Ignore transient lock info files created by terraform apply
.terraform.tfstate.lock.info

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*

# Ignore CLI configuration files
.terraformrc
terraform.rc

# Top-level Node.js files (not needed for application)
/package.json
# /package-lock.json  # Needed for npm ci in Docker builds
/node_modules/

# Frontend build artifacts (staged in work/frontend/)
apps/*/frontend/node_modules/
apps/*/.venv/
*.log

# Progress Markers
examples/
work/
BACKLOG.*
PLAN.md
Deployment_Engineer*
# package*.json  # Needed for npm ci in Docker builds
IMPLEMENTATION_PLAN.md
